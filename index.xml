<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TravelgateX Documentation</title>
    <link>/</link>
    <description>Recent content on TravelgateX Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Apr 2017 18:36:24 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>API Reference</title>
      <link>/hotelx/reference/api-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/reference/api-reference/</guid>
      <description> This API reference is organized by graphql operations related to product.
Query Operations Mutation Operations Documentation Schema documentation
Samples  Search, Quote, Book, Cancel and Retrieve bookings  </description>
    </item>
    
    <item>
      <title>API Reference</title>
      <link>/travelgatex/reference/api-reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/reference/api-reference/</guid>
      <description>This API reference is organized by graphql operations related to product.
Query Operations Mutation Operations Custom Scalar Types TravelgateX GraphQL schema implementation defines custom scalar types.
JSON Sometimes it&amp;rsquo;s necessary to manage arbitrary JSON values for loosely structured data. The JSON type makes sure that it is actually valid JSON and returns the value as a parsed JSON object/array instead of a string.
In queries or mutations, JSON fields have to be specified with enclosing double quotes.</description>
    </item>
    
    <item>
      <title>Accesses, `Sellers` and Context</title>
      <link>/hotelx/concepts/accesses-supplier-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/accesses-supplier-context/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Book</title>
      <link>/hotelx/howtos/howto-book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/howtos/howto-book/</guid>
      <description>Flow to book</description>
    </item>
    
    <item>
      <title>Build An OTA</title>
      <link>/travelgatex/tutorials/ota-site/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/tutorials/ota-site/</guid>
      <description> Build Your Own Full Fledged OTA </description>
    </item>
    
    <item>
      <title>Entities</title>
      <link>/admin/connect/entities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/admin/connect/entities/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>IAM</title>
      <link>/admin/account/iam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/admin/account/iam/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/admin/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/admin/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/flightx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/flightx/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/getting-started/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/overview/</guid>
      <description>Become a TravelgateX Partner The first step towards building your next travel API is to become a TravelgateX registered partner.
At this moment, please contact us in order to become a partner.
We will be publishing a registration website so each developer can register for an account with us. Please bear with us.
Product Quick Start Although there&amp;rsquo;s only one endpoint, our GraphQL API models all the products and services we offer.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/hotelx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/overview/</guid>
      <description>Overview HotelX is the ultimate connectivity solution, it not only connects you to multiple Sellers, but also adds business logic solving most of the problems commonly found in the travel business in an elegant and efficient way.
 Each and every layer discribed in the this figure is explained as follows:
Business Logic We&amp;rsquo;ve added a new layer of business logic in front of the pure transformation API, very fast and totally scalable.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/insightsx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/insightsx/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/mappeax/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/mappeax/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/statsx/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/statsx/overview/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>/travelgatex/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/overview/</guid>
      <description>This page provides an overview of travelgateX platform. It&amp;rsquo;s used as reference
GraphQL Gateway ConnectX is the first-in-the-industry travel API completely based in GraphQL. Most travel APIs are old legacy XML Soap APIs. We know that, because we&amp;rsquo;ve integrated too many of them. The problems with that technology are well-known and we won&amp;rsquo;t get into details here. One of the things we really like about GraphQL, is that each client is ultimately responsible over what it wants to be returned.</description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>/getting-started/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/quickstart/</guid>
      <description>Become a TravelgateX Partner The first step towards building your next travel API is to become a TravelgateX registered partner.
At this moment, please contact us in order to become a partner.
We will be publishing a registration website so each developer can register for an account with us. Please bear with us.
Product Quick Start Although there&amp;rsquo;s only one endpoint, our GraphQL API models all the products and services we offer.</description>
    </item>
    
    <item>
      <title>Quotas &amp; Limits</title>
      <link>/hotelx/resources/quotas-limits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/resources/quotas-limits/</guid>
      <description>ConnectX Hotel limits the maximum rate of requests adn graph deep. Specific policies vary depending on resource availability, user profile, service usage history, and other factors, and are subject to change without notice.</description>
    </item>
    
    <item>
      <title>SFTP</title>
      <link>/travelgatex/data-automation/ftp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/data-automation/ftp/</guid>
      <description>Introduction SFTP, or Secure File Transfer Protocol, is a network protocol that provides completely secure access, transfer, and management of data files programmatically. This protocol is used by the largest organizations in Finance, Technology, and Consulting to transfer data such as Personally Identifiable Information (PII) to ensure it remains 100% secure.
Security To ensure the security of your data, we adhere to the highest standards in data security. The advanced security measures we take include:</description>
    </item>
    
    <item>
      <title>Validator</title>
      <link>/hotelx/plugins/validators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/validators/</guid>
      <description> Validators  Validate Request  </description>
    </item>
    
    <item>
      <title>Build a Dashboard</title>
      <link>/travelgatex/tutorials/stats-dashboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/tutorials/stats-dashboard/</guid>
      <description> Build Your Own Full Fledged OTA </description>
    </item>
    
    <item>
      <title>GraphQL Overview</title>
      <link>/learning-graphql/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/overview/</guid>
      <description>A query language for your API Designed by Facebook, GraphQL is a new way of dealing and managing APIs, specially useful for decoupling client&amp;rsquo;s from server&amp;rsquo;s logic.
Straight from the horse&amp;rsquo;s mouth:  A GraphQL query is a string that is sent to a server to be interpreted and fulfilled, which then returns JSON back to the client. Lee Byron, Facebook
 Official Definition  GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.</description>
    </item>
    
    <item>
      <title>Mapping</title>
      <link>/hotelx/plugins/mappings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/mappings/</guid>
      <description> Map plugins
Input Mapping  Mapping Hotel  Output Mapping  Mapping Room  </description>
    </item>
    
    <item>
      <title>Quickstart</title>
      <link>/hotelx/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/quickstart/</guid>
      <description>This page shows you how to perform basic hotel book using GraphQL Playground.
Before you begin  Follow the steps in Creating an access token to create your API Key. Check connectivity for your API Key. Open Sample Playground and modify HTTP HEADERS field Authorization with your API Key.  Search Hotel  Click on search tab Modify Query Variables with valid dates and send the request.  Quote Hotel  Click on quote tab In Query Variables modify optionRefId with option id value returned in search response and send the request.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/hotelx/resources/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/resources/release-notes/</guid>
      <description>This page documents production updates to connectX Hotel. We recommend that connectX hotel developers periodically check this list for any new announcements.</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/travelgatex/resources/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/resources/release-notes/</guid>
      <description>This page contains release notes for features and updates to the travelgaX GraphQL API.</description>
    </item>
    
    <item>
      <title>Aggregation</title>
      <link>/hotelx/plugins/aggregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/aggregation/</guid>
      <description> Aggregator Access  Price Aggregate  Aggregator  Price Aggregate  </description>
    </item>
    
    <item>
      <title>Basic Concepts</title>
      <link>/learning-graphql/basic_concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/basic_concepts/</guid>
      <description>Queries and Mutations  At its simplest, GraphQL is about asking for specific fields on objects. Let&amp;rsquo;s start by looking at a very simple query and the result we get when we run it http://graphql.org/learn/queries/?utm_source=docs.travelgatex.com
 There are 2 basic operations in GraphQL schemas:
Queries http://graphql.org/learn/queries/?utm_source=docs.travelgatex.com
Just like a RESTful Get method, queries query the system. This operation reads values from the server using a Graph Object and gets a JSON as a response.</description>
    </item>
    
    <item>
      <title>Booking Flow</title>
      <link>/hotelx/concepts/booking-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/booking-flow/</guid>
      <description>Search, Quote and Book transactions must be executed sequentally in order to book hotel rooms in a Seller.
Search Performs an hotel availability search over 1 or more Seller accesses
Depending Seller, search operations implitiy use supplier&amp;rsquo;s cache.
Operation { &amp;quot;query&amp;quot;: { &amp;quot;search&amp;quot;: { &amp;quot;hotel&amp;quot;: { } } } }  PlayGround Samples  search  Quote Performs an hotel quote over an option returned in Search Response.
Operation { &amp;quot;query&amp;quot;: { &amp;quot;quote&amp;quot;: { &amp;quot;hotel&amp;quot;: { } } } }  PlayGround Samples  quote  Book Performs a book or reservation over an option returned in Quote Response</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>/getting-started/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/concepts/</guid>
      <description>TravelgateX offers a set of Products ready to be integrated using a single GraphQL endpoint.
GraphQL API TravelgateX is the first-in-the-industry travel API completely based in GraphQL. Most travel APIs are old legacy XML Soap APIs. We know that, because we&amp;rsquo;ve integrated too many of them. The problems with that technology are well-known and we won&amp;rsquo;t get into details here. One of the things we really like about GraphQL, is that each client is ultimately responsible over what it wants to be returned.</description>
    </item>
    
    <item>
      <title>Playground</title>
      <link>/getting-started/playground/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/getting-started/playground/</guid>
      <description>Try it For Yourself Or open in a new tab here</description>
    </item>
    
    <item>
      <title>Authenticating</title>
      <link>/travelgatex/security/authenticating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/travelgatex/security/authenticating/</guid>
      <description>Introduction Products and Resources are granted to Partners belonging to Organizations.
Authorized Partners can manage security rules to allow or deny Resources and Products.
Authentication Authentication is the process of authorizing or making sure that the Partner is who is supposed to be. This can be ensured either by login credentials or by API Key.
Every request to TravelgateX GraphQL API must carry an Authorization header with a JSON Web Token or API Key inside.</description>
    </item>
    
    <item>
      <title>Management Flow</title>
      <link>/hotelx/concepts/management-flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/management-flow/</guid>
      <description> Manage operations can be used in order to operate above Seller&amp;rsquo;s bookings.
Cancel Performs a Seller booking cancellation.
Operation { &amp;quot;mutation&amp;quot;: { &amp;quot;hotelCancel&amp;quot;: { } } } }  PlayGround Samples  hotelCancel  Booking Performs a Seller booking list or detail.
Operation { &amp;quot;query&amp;quot;: { &amp;quot;booking&amp;quot;: { &amp;quot;hotel&amp;quot;: { } } } }  PlayGround Samples  booking  </description>
    </item>
    
    <item>
      <title>Thinking in GraphQL</title>
      <link>/learning-graphql/thinking_in_graphql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/thinking_in_graphql/</guid>
      <description>A Paradigm Shift GraphQL is a query language, and as such it does exactly that: it queries servers in order to get results back. And we get to choose exactly what data we want to retrieve. As opposed to JSON, each piece of data has its own type, so we get to know exactly what to expect, it&amp;rsquo;s a typed language. This gives it a lot of predictability, something we can really appreciate, especially when dealing with third party APIs, where we have no control of what&amp;rsquo;s going on in the other side.</description>
    </item>
    
    <item>
      <title>Content</title>
      <link>/hotelx/concepts/content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/concepts/content/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Exchange</title>
      <link>/hotelx/plugins/converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/converter/</guid>
      <description> Aggregator Access  Price Aggregate  Aggregator  Price Aggregate  </description>
    </item>
    
    <item>
      <title>Tooling</title>
      <link>/learning-graphql/tooling/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/tooling/</guid>
      <description>Tooling Please find below a collection of tools we&amp;rsquo;ve been using to help us develop in GraphQL. We have curated this list with the different goals each of the tools is for:
Designing Schemas We follow the Schema First methodology. There are many tools, the ones we tried and like most nowadays are:
 APIs Guru&amp;rsquo;s graphql-faker: https://github.com/APIs-guru/graphql-faker  TODO: Falta chicha!! Go Packages Nowadays most our APIS are written in Go, mainly because of speed, ability to handle very high load while using low resources.</description>
    </item>
    
    <item>
      <title>Markup</title>
      <link>/hotelx/plugins/markup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hotelx/plugins/markup/</guid>
      <description> Processor Access  Markup  </description>
    </item>
    
    <item>
      <title>Tutorials &amp; Resources</title>
      <link>/learning-graphql/tutorials_resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/learning-graphql/tutorials_resources/</guid>
      <description>The GraphQL ecosystem is growing fast. Apart from facebook&amp;rsquo;s and Graphql.org&amp;rsquo;s official documentation, each day as more and more development teams embrace the technology new blog posts, articles, tutorials, videos and learning material in general is published online.
This list is intended to serve as a examples we&amp;rsquo;ve used and found useful when adopting the technology. We&amp;rsquo;ve separated between tutorials get-your-hands-dirty full action kind to resources, which are reading materials, podcasts or any other kind of documentation, written or not, which will help you to Think in GraphQL.</description>
    </item>
    
    <item>
      <title>footer</title>
      <link>/_footer/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>/_footer/</guid>
      <description>Lorem ipsum dolor sit amet.</description>
    </item>
    
    <item>
      <title>header</title>
      <link>/_header/</link>
      <pubDate>Mon, 24 Apr 2017 18:36:24 +0200</pubDate>
      
      <guid>/_header/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>/guion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/guion/</guid>
      <description>Getting Started pagetitle = &amp;ldquo;&amp;rdquo; GOAL: información basica para empezar a desarrollar
Overview GOAL: Explicar el who, why, how de la plataforma
 WHO: Equipos tecnicos para consumir servicios de travel
 WHY: search &amp;amp; book travel multi-products &amp;amp; multi-source
 WHY: Using the Storefront API, you can:
 HOW: Plataforma: Multi-Producto &amp;amp; Multi-Source
 HOW: Diagrama Platforma
 HOW: Utilización de GraphQL: EndPoint único
 WHY: Fast. Scalable. Reliable.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/credits/</guid>
      <description>github contributors .ghContributors{ display:flex; flex-flow: wrap; align-content: flex-start } .ghContributors  div{ width: 50% ; display: inline-flex; margin-bottom: 5px; } .ghContributors  div label{ padding-left: 4px ; } .ghContributors  div span{ font-size: x-small; padding-left: 4px ; }   @vjeantet 225 commits   @matcornic 49 commits   @W-Floyd 24 commits   @gwleclerc 21 commits   @lierdakil 16 commits   @Pilskalns 12 commits   @SiamKreative 6 commits   @jose-oc 6 commits   @Xipas 5 commits   @altinnadmin 4 commits   @FMuro 2 commits   @Thiht 2 commits   @EnigmaCurry 2 commits   @adamlamar 1 commits   @byzheng 1 commits   @zivbk1 1 commits   @vielmetti 1 commits   @erikjasiak 1 commits   @giuliov 1 commits   @farmergreg 1 commits   @tarpdalton 1 commits   @JohnBlood 1 commits   @kamilchm 1 commits   @ripienaar 1 commits   @shazic 1 commits   @viertaxa 1 commits   @uweschaefer 1 commits   @justin-yan 1 commits   @karlmacklin 1 commits   @petzi53 1 commits   @remi31000 1 commits   @xxxtonixxx 1 commits   Other contributors  @bep supports and advices   Packages and libraries  Bootstrap - front-end framework mermaid - generation of diagram and flowchart from text in a similar manner as markdown font awesome - the iconic font and CSS framework jQuery - The Write Less, Do More, JavaScript Library lunr - Lunr enables you to provide a great search experience without the need for external, server-side, search services&amp;hellip; JavaScript-autoComplete - An extremely lightweight and powerful vanilla JavaScript completion suggester.</description>
    </item>
    
  </channel>
</rss>